{"version":3,"sources":["src/table.coffee"],"names":[],"mappings":"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","file":"dist/table.js","sourcesContent":["AsciiTable = require 'ascii-table'\n\nclass Table\n\n  sort: 'id'\n  search: false\n  showHeader: true\n  defaultColumn: 'id'\n  name: null\n  title: null\n  stats:\n    total: 0\n    show: 0\n\n  constructor: (@columns, @defaultColumn, @name, @sort) ->\n    @debug = require('debug')('bux:table')\n    return true\n\n  render: (array) ->\n    heading = []\n    rows = []\n\n    for col in @layout\n      if not @columns[col]\n        continue\n      heading.push @columns[col].name\n\n    if @search\n      if @search.substring(0,1) == '@'\n        searchExpr = new RegExp('^'+@search+'$', 'i')\n      else\n        searchExpr = new RegExp(@search, 'i')\n      @debug \"Search expression: #{searchExpr}\"\n\n    # traverse all items\n    @stats.total = 0\n    @stats.show = 0\n    for pos in array\n      valid = true\n      @stats.total++\n\n      if @filterFn\n        if !@filterFn(pos) then continue\n\n      cols = []\n      rendered = {}\n      for col in @layout\n        if !@columns[col]\n          return \"Column not found: #{col}\"\n\n        if @columns[col].render\n          val = @columns[col].render(pos)\n        else if @columns[col].key.match(/\\./)\n          spl = @columns[col].key.split('.')\n          val = pos[spl[0]]?[spl[1]]\n        else\n          val = pos[@columns[col].key]\n\n        if @search and col == @defaultColumn\n          if !val.match(searchExpr)\n            valid = false\n\n        cols.push val\n        rendered[col] = val\n\n      if @search\n        for c in [ rendered.id, rendered.symbols, rendered.product_ident ]\n          if !valid and c\n            valid = if c.match(searchExpr) then true else false\n\n      if valid == true\n        rows.push { cols: cols, pos: pos, rendered: rendered }\n        @stats.show++\n\n    if @titleFn\n      @title = @titleFn ''+@stats.show+'/'+@stats.total\n\n    table = new AsciiTable(@title || @name)\n\n    if @showHeader and heading.length > 0\n      table.setHeading heading\n\n    for col, i in @layout\n      if !@columns[col]\n        return @exception \"Bad portfolio column: #{col}\"\n      if @columns[col].align\n        table = table.setAlign i, AsciiTable[@columns[col].align]\n\n    if @sort\n      @debug \"Sort key: #{@sort}\"\n\n      sortBy =\n        key: @sort.match(/^(\\!|)(.+)/)[2]\n        direction: if @sort.match(/^\\!/) then -1 else 1\n\n      rows.sort (xa, xb) =>\n        a = xa.cols\n        b = xb.cols\n        isNumber = false\n\n        rank = (v) =>\n          index = Object.keys(@layout).indexOf(sortBy.key)\n          if @columns[sortBy.key].sortRank\n            val = @columns[sortBy.key].sortRank(v)\n          else if index == -1\n            val = v.pos[@columns[sortBy.key].key]\n          else\n            val = v.cols[index]\n\n          if val == undefined\n            val = 0\n          numb = val.toString().match(/([\\d\\.\\-]*)/)\n          if numb\n            isNumber = true\n            return new Number(numb[1])\n          else\n            return val.toString().substring(0,1)\n\n        compare = (x, y) ->\n          return rank(x) - rank(y)\n\n        if sortBy.direction == -1\n          return compare(xb, xa)\n        else\n          return compare(xa, xb)\n\n    for row in rows\n      table.addRow row.cols\n\n    return table.toString()\n\n  setSort: (sort) ->\n    @sort = sort.trim()\n\n  setLayout: (layout) ->\n    @layout = layout.split(',').map (val) -> return val.trim()\n\n  setSearch: (q) ->\n    @search = q\n\n  setTitle: (str) ->\n    @title = str\n\n  processSimpleData: (x, params) =>\n    ignore = [ 'avatarUrl' ]\n\n    matrix = []\n    for k,v of x\n      if k in ignore then continue\n      if typeof(v) == 'object' and v != null\n        v = JSON.stringify(v).substring(0,10) + ' ..'\n      if !params[k] then continue\n\n      matrix.push { key: params[k].name, value: v.toString() }\n\n    return matrix\n\n  listColumns: () ->\n    columnsOutput = []\n    lines = []\n\n    for colKey, col of @columns\n      columnsOutput.push { key: colKey, name: col.name }\n      lines.push [ colKey, col.name ]\n\n    table = new AsciiTable('Available columns')\n      .setHeading [ 'Column', 'Name' ]\n\n    table.addRowMatrix lines\n    return { table: table, columns: columnsOutput }\n\nmodule.exports = Table\n"]}